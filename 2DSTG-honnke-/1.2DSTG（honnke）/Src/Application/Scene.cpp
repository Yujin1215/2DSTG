#include "main.h"
#include "Scene.h"
#include"Object/Player/Player.h"
#include"Object/Enemy/Enemy.h"
#include"Object/Enemy/Enemy1.h"
#include"Object/Bullet/Bullet.h"

void Scene::Draw2D()
{
	for (int i = 0; i < m_objList.size(); i++)
	{
		m_objList[i]->Draw();
	}

}

void Scene::Update()
{

	//イテレータ作成　auto版
	auto it = m_objList.begin();

	while (it != m_objList.end())//end\89は最後の要素の１つうしろを返す
	{
		//オブジェクトの有効チェック
		if ((*it)->GetAliveFlg() == false)
		{
			it = m_objList.erase(it);
			//無効なオブジェクトをリストから削除
		}
		else
		{
			it++;//次の要素へイテレータを進める
		}
	}

	//3%の確率で敵を出現させる
	if (rand() % 100 < 0.5)
	{
		//1体分インスタンスを生成＆初期化してリストへ追加
		std::shared_ptr<Enemy>enemy;
		enemy = std::make_shared<Enemy>();

		enemy->Init();
		enemy->SetPos(640.0f, 0.0f);
		enemy->SetMovePow({ -2.0f, -2.0f, 0.0f });

		m_objList.push_back(enemy);
	}
	if (rand() % 100 < 0.5)
	{
		std::shared_ptr<Enemy1>enemy1;
		enemy1 = std::make_shared<Enemy1>();

		enemy1->Init();
		enemy1->SetPos(640.0f, 360.0f);
		enemy1->SetMove({ 0.0f, -1.0f, 0.0f });

		m_objList.push_back(enemy1);
	}
	//全オブジェクトの更新関数を一括で呼ぶ
	for (int i = 0; i < m_objList.size(); i++)//size()はMAX値
	{
		m_objList[i]->Update();
	}
}

void Scene::Init()
{
	//Player
	std::shared_ptr<Player>player;			//インスタンス生成
	player = std::make_shared<Player>();	//実体の確保
	player->Init();							//初期化
	player->SetOwner(this);
	m_objList.push_back(player);


	//Enemy
	for (int i = 0; i < 10; i++)
	{
		std::shared_ptr<Enemy>enemy;
		enemy = std::make_shared<Enemy>();
		enemy->Init();
		enemy->SetPos(-640.0f + (i * 128.0f), (360.0f));
		m_objList.push_back(enemy);
	}
}

void Scene::Release()
{
}

void Scene::ImGuiUpdate()
{
	//return;

	ImGui::SetNextWindowPos(ImVec2(20, 20), ImGuiSetCond_Once);
	ImGui::SetNextWindowSize(ImVec2(200, 100), ImGuiSetCond_Once);

	// デバッグウィンドウ
	if (ImGui::Begin("Debug Window"))
	{
		ImGui::Text("FPS : %d", APP.m_fps);
	}
	ImGui::End();
}
